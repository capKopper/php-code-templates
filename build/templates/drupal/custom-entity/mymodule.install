<?php

/**
 * @file
 * %%MODULE_TITLE%% install schema.
 */

/**
 * Implements hook_uninstall().
 */
function %%MACHINE_NAME%%_uninstall() {
  // Bypass entity_load() as we cannot use it here.
  $types = db_select('%%MACHINE_NAME%%_type')
    ->fields('%%MACHINE_NAME%%_type')
    ->execute()
    ->fetchAllAssoc('type');

  foreach (array_keys($types) as $type) {
    field_attach_delete_bundle('%%MACHINE_NAME%%', $type);
  }
}

/**
 * Implements hook_schema().
 */
function %%MACHINE_NAME%%_schema() {
  $schema = array();

  $schema['%%MACHINE_NAME%%'] = array(
    'description' => 'The base table for %%ENTITY_LOWERCASE_NAME%% entities.',
    'fields' => array(
      '%%ENTITY_PRIMARY_KEY%%' => array(
        'description' => 'Primary Key: Identifier for a %%ENTITY_LOWERCASE_NAME%%.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type of this %%ENTITY_LOWERCASE_NAME%%.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'label' => array(
        'description' => 'The name of the %%ENTITY_LOWERCASE_NAME%% - a human-readable identifier.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'language' => array(
        'description' => 'The {languages}.language of this %%ENTITY_LOWERCASE_NAME%%.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'uid' => array(
        'description' => 'The {users}.uid that created this %%ENTITY_LOWERCASE_NAME%%.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether or not the %%ENTITY_LOWERCASE_NAME%% is active.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the %%ENTITY_LOWERCASE_NAME%% was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the %%ENTITY_LOWERCASE_NAME%% was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('%%ENTITY_PRIMARY_KEY%%'),
    'indexes' => array(
      'type' => array('type'),
    ),
  );

  $schema['%%MACHINE_NAME%%_type'] = array(
    'description' => 'Stores information about defined %%ENTITY_LOWERCASE_NAME%% types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique %%ENTITY_LOWERCASE_NAME%% type identifier.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this %%ENTITY_LOWERCASE_NAME%% type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this %%ENTITY_LOWERCASE_NAME%% type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The weight of this %%ENTITY_LOWERCASE_NAME%% type in relation to others.',
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}
